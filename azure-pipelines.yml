# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

stages:
- stage : GenerateArtefact
  jobs:
    - job: Artefact
      steps:
      - task: CopyFiles@2
        inputs:
          SourceFolder: 'arm/'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'
        
      
- stage : InfrastructureDeployment
  pool:
   vmImage: 'ubuntu-latest' 
  jobs: 
  - job: Infrasturcture
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'drop'
        targetPath: '$(Build.ArtifactStagingDirectory)'   

    
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'AI-BoldPlay Service Connection'
        subscriptionId: '9ae9cf58-0498-42ff-8666-95badd20b8cd'
        action: 'Create Or Update Resource Group'
        resourceGroupName: 'AZRG-USE2-CON-030009-NPD'
        location: 'EAST US 2'
        templateLocation: 'Linked artifact'
        csmFile: '/home/vsts/work/1/a/ACRAKS.json'
        csmParametersFile: '/home/vsts/work/1/a/ACRAKSParameter.json'
        deploymentMode: 'Incremental'
        deploymentName: 'acrDeployement'
        deploymentOutputs: 'acrName'
                
    - task: PowerShell@2
      inputs:
            targetType: 'inline'
            script: |
              # Write your PowerShell commands here.              
              Write-Host "$(acrName)"
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(agent.builddirectory)'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop_container_code'
        publishLocation: 'Container'
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop_container_code'
        downloadPath: '$(System.ArtifactsDirectory)'
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'AI-BoldPlay Service Connection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 
          az login --service-principal --username 'b203f197-0439-4458-98c1-124f5a96cc95' --password 'MkQlQDR4Jkp9L3s/aHgtT0tjcV8hPylTPXtzbkdSNzpJZw==' --tenant '36da45f1-dd2c-4d1f-af13-5abe46b99921' 
          # az account set --subscription 'US-AZSUB-AME-CBCAP-NPD'
    - task: AzureCLI@2
      displayName:  Login to ACR
      inputs:
      
        azureSubscription: 'AI-BoldPlay Service Connection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 'az acr login -n ''acrCluster012807'' --subscription ''US-AZSUB-AME-CBCAP-NPD'''
    
          
    
            
           
    
      


    

 
# - stage : CodeDeployment
#   dependsOn: InfrastructureDeployment 
#   pool:
#    vmImage: 'ubuntu-latest' 
#   jobs:
#     - job: CodeDeployment